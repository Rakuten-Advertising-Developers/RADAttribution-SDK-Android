plugins {
    id("maven-publish")
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'io.github.rakuten-advertising-developers'
version = "0.0.2"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dokka {
        outputFormat = 'gfm'
        outputDirectory = "../docs"
        reportUndocumented = true
        skipEmptyPackages = true
        noStdlibLink = false
        includes = ["../README.md", 'packages.md']
        sourceRoot {
            path = "src/main/java/com/rakuten/attribution/sdk"
        }
        doLast {
            copy {
                from "../docs/radattribution-sdk-android"
                into "../docs"
            }
            delete "../docs/radattribution-sdk-android"
        }
    }
    libraryVariants.all { variant ->
            variant.mergeAssetsProvider.configure {
                doLast {
                    delete(fileTree(dir: outputDir))
                }
            }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom.project {
                name "Attribution SDK"
                packaging 'aar'
                description 'attribution sdk artifact'
                artifactId "attribution-sdk"
                url 'https://github.com/Rakuten-Advertising-Developers/RADAttribution-SDK-Android'
                scm {
                    url 'git@github.com:Rakuten-Advertising-Developers/RADAttribution-SDK-Android.git'
                    connection 'git@github.com:Rakuten-Advertising-Developers/RADAttribution-SDK-Android.git'
                    developerConnection 'git@github.com:Rakuten-Advertising-Developers/RADAttribution-SDK-Android.git'
                }
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'shmyhol'
                        name 'Pavlo Shmyhol'
                    }
                }
            }
        }
    }
}

artifacts {
    archives file: file("$buildDir/outputs/aar/radattribution-sdk-android-release.aar"),
            name: 'radattribution-sdk',
            type: 'aar',
            classifier: "aar"
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}
//Creating sources with comments
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

signing {
    sign configurations.archives
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // Retrofit Coroutines Support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    api 'io.jsonwebtoken:jjwt-api:0.11.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.11.1') {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
}
